-- Kreiranje baze podataka
CREATE DATABASE IF NOT EXISTS DEFAULT_DB;

-- Koriscenje default baze podataka
USE DEFAULT_DB;

-- Kreiranje tabele za pitanja
CREATE TABLE IF NOT EXISTS questions (
    id INT PRIMARY KEY AUTO_INCREMENT,
    pitanje VARCHAR(500) UNIQUE NOT NULL,
    tezina INT NOT NULL
);

-- pitanja ODP
INSERT INTO questions (pitanje, tezina) VALUES
('Šta predstavlja komponenta u React-u?', 1),
('Koja je osnovna prednost korišćenja React-a u odnosu na klasičan JavaScript?', 1),
('Šta je JSX odnosno TSX i koja mu je svrha u React-u?', 2),
('Kako se razlikuju funkcionalne i klasne komponente u React-u?', 2),
('Koja je osnovna uloga Vite.js u razvoju veb aplikacija?', 1),
('Zašto je Vite brži u odnosu na tradicionalne alate poput Webpack-a?', 2),
('Šta je Node Package Manager?', 1),
('Čemu služi package.json?', 1),
('Šta je svrha validacije podataka u veb aplikacijama?', 1),
('Zašto je važno validirati unos pre nego što se obradi?', 1),
('Koja je uloga isNaN() funkcije u validaciji?', 1),
('Da li je preporučljivo vršiti validaciju samo na klijentskoj strani?', 2),
('Šta je localStorage i kako se čuvaju podaci?', 1),
('Koja je razlika između localStorage i sessionStorage?', 1),
('Kako se u React-u čita vrednost iz localStorage-a prilikom učitavanja komponente?', 2),
('Objasni ulogu useEffect huka u čuvanju podataka u localStorage-u?', 2),
('Šta podrazumevamo pod pojmom klijent–server arhitekture i koje su njene ključne karakteristike?', 2),
('Koje su glavne prednosti i mane klijent–server modela u odnosu na monolitne aplikacije?', 2),
('Kako se obično odvija komunikacija između klijenta i servera u veb aplikacijama?', 2),
('Koji su najčešći formati za razmenu podataka između klijenta i servera?', 1),
('Šta predstavlja akronim SOLID i zašto su ovi principi važni u programiranju?', 3),
('Kako se primena Single Responsibility Principle (SRP) odražava na arhitekturu veb servisa?', 3),
('Šta podrazumeva pojam čista arhitektura i koji su njeni osnovni koncepti?', 3),
('Koje slojeve obično sadrži čista arhitektura i koja je njihova uloga?', 3),
('Koje su prednosti korišćenja Dependency Injection-a u okviru čiste arhitekture?', 3),
('Kako kombinovati principe SOLID i čistu arhitekturu u realnim projektima?', 3),
('Šta je replikacija u kontekstu računarskih sistema?', 2),
('Koja je razlika između sinhrone i asinhrone replikacije?', 2),
('Kako se postiže konzistentnost među više kopija u replikacionom sistemu?', 3),
('Šta je geografska replikacija i koja je njena namena?', 2),
('Kako replikacija utiče na skalabilnost sistema?', 2),
('Šta je otpornost na otkaze (fault tolerance)?', 2),
('Koja je razlika između fault tolerance i high availability?', 2),
('Šta znači failover i kako funkcioniše?', 2),
('Šta je redundancy i kako se koristi u dizajnu pouzdanih sistema?', 2),
('Koji su najčešći izvori otkaza u distribuiranim sistemima?', 2),
('Kakvu ulogu ima monitoring u sprečavanju potpunog otkaza sistema?', 2),
('Šta je Vercel i koju ulogu ima u distribuiranom sistemu?', 2),
('Na koje načine je moguće deploy-ovati aplikaciju na Vercel?', 2),
('Koje prednosti ima deployment preko GitHub integracije?', 2),
('Šta su Vercel templates i u kojim situacijama se koriste?', 2),
('Na koji način Vercel omogućava nadzor nad serverless funkcijama?', 3),
('Objasni ulogu CDN-a u kontekstu Vercel platforme.', 2),
('Šta su promenljive okruženja (env variables) i kako se konfigurišu na Vercel-u?', 2),
('Objasni koncept rollback u kontekstu deployment-a na Vercel-u.', 2),
('Koji tipovi izveštaja (logova) se mogu pregledati u Vercel Dashboard-u?', 2),
('Kako se prate HTTP zahtevi i odgovori u okviru Vercel serverless funkcija?', 3),
('Koje metrike su dostupne preko Vercel-a radi nadzora performansi?', 3),
('Šta je autentifikacija u kontekstu informacionih sistema?', 1),
('Šta je autorizacija i kako se razlikuje od autentifikacije?', 1),
('Koji je osnovni cilj autentifikacije?', 1),
('Zašto je važno razdvajanje procesa autentifikacije i autorizacije?', 2),
('Šta je uloga JSON Web Token (JWT) u procesu autentifikacije?', 2),
('Koja je razlika između sesije i tokena?', 2),
('Kako funkcioniše autentifikacija preko OAuth protokola?', 3),
('Zašto je bitno heširati lozinke pre nego što se čuvaju u bazi?', 2),
('Koje su prednosti korišćenja spoljašnjih autentifikacionih provajdera (npr. Google)?', 2),
('Šta su najbolje prakse pri implementaciji mehanizama autentifikacije i autorizacije?', 3),
('Šta je kontrola pristupa zasnovana na ulogama?', 2),
('Navedi prednosti RBAC modela u odnosu na model pojedinačnih dozvola.', 2),
('Šta znači princip najmanjih privilegija?', 2),
('Koja je razlika između uloge i nivoa pristupa?', 2),
('Šta podrazumeva hijerarhija uloga?', 2),
('Da li viša uloga u hijerarhiji uvek nasleđuje dozvole nižih uloga?', 2),
('Da li jedan korisnik može imati više uloga u RBAC modelu?', 2),
('Šta je funkcija autorizacionog posrednika u sistemu kontrole pristupa?', 3),
('Koji HTTP status se obično vraća pri zabranjenom pristupu?', 1),
('Koji su potencijalni bezbednosni rizici ako se hijerarhija uloga pogrešno implementira?', 3);
